{"version":3,"sources":["components/CardComponent.jsx","redux/types.js","redux/actions/usersActions.js","components/UsersComponent.jsx","components/Navbar.jsx","components/CardDetailsComponent.jsx","components/Authors.jsx","App.js","reportWebVitals.js","redux/reducers/users.js","redux/reducers/index.js","redux/sagas/userSaga.js","redux/store.js","index.js"],"names":["CardComponent","props","className","users","name","company","GET_USERS_REQUESTED","GET_USERS_SUCCESS","GET_USERS_FAILURE","getUsers","type","payload","UsersComponent","dispatch","useDispatch","useSelector","state","loading","error","console","log","useEffect","length","map","user","id","Navbar","exact","activeClassName","to","CardDetailsComponent","username","email","phone","website","Authors","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","action","message","fetchUsers","userSagaHandler","getApi","fetch","method","headers","response","json","catch","call","put","takeEvery","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.295f6288.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction CardComponent(props) {\r\n    return (\r\n        <div className='card_row'>\r\n           <h5>Name:{props.users.name}</h5> \r\n           <p>Company Name:{props.users.company.name}</p> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardComponent\r\n","export const GET_USERS_REQUESTED='GET_USERS_REQUESTED';\r\nexport const GET_USERS_SUCCESS='GET_USERS_SUCCESS';\r\nexport const GET_USERS_FAILURE='GET_USERS_FAILURE';\r\n","import { GET_USERS_REQUESTED} from '../types'\r\n\r\nexport function getUsers(users){\r\n    return{\r\n        type:GET_USERS_REQUESTED,\r\n        payload:users\r\n    }\r\n}","import React, { useEffect } from 'react'\r\nimport CardComponent from './CardComponent';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport {getUsers} from '../redux/actions/usersActions'\r\n\r\nfunction UsersComponent() {\r\n    const dispatch=useDispatch();\r\n    const users=useSelector(state=>state.users.users);\r\n    const loading=useSelector(state=>state.users.loading);\r\n    const error=useSelector(state=>state.users.error);\r\n    console.log(\"users data\",users);\r\n    \r\n    \r\n    useEffect(() => {\r\n       dispatch(getUsers())\r\n    },[])\r\n    return (\r\n        <div className='user_component_row'>\r\n              <h1>Hi Redux Saga Task App!!</h1>\r\n\r\n        {loading && <span>Loading...</span>}\r\n        {users.length>0 && users.map(user=>(\r\n                    <CardComponent key={user.id} users={user}/>\r\n\r\n    ))}\r\n\r\n        {users.length===0 && !loading && <h3>No User Available</h3>}\r\n        {error && !loading && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UsersComponent\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport './Navbar.css';\r\n\r\nfunction Navbar(props) {\r\n\r\n    return (\r\n        <div className='navbar'>\r\n           <ul className='navbar_links'>\r\n               <li>\r\n                   <NavLink\r\n                   exact\r\n                   activeClassName=\"navbar_active_link\"\r\n                   to=\"/\"\r\n                   >\r\n                       Home\r\n                   </NavLink>\r\n               </li>\r\n              \r\n               <li>\r\n               <NavLink\r\n                   activeClassName=\"navbar_active_link\"\r\n                   to=\"/authorList\"\r\n                   >\r\n                    Author List\r\n                   </NavLink>\r\n               </li>\r\n           </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react'\r\n\r\nfunction CardDetailsComponent(props) {\r\n    return (\r\n        <div className='card_row'>\r\n           <h5>Name:{props.users.name}</h5> \r\n            <h6>{props.users.username}</h6>\r\n           <h6>{props.users.email}</h6>\r\n           <h6>{props.users.phone}</h6>\r\n           <h6>{props.users.website}</h6>\r\n           <p>Company Name:{props.users.company.name}</p> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardDetailsComponent\r\n","import React, { useEffect } from 'react'\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport {getUsers} from '../redux/actions/usersActions'\r\nimport CardDetailsComponent from './CardDetailsComponent';\r\n\r\nfunction Authors() {\r\n\r\n        const dispatch=useDispatch();\r\n        const users=useSelector(state=>state.users.users);\r\n        const loading=useSelector(state=>state.users.loading);\r\n        const error=useSelector(state=>state.users.error);\r\n        console.log(\"users data\",users);\r\n        \r\n        \r\n        useEffect(() => {\r\n           dispatch(getUsers())\r\n        },[])\r\n        return (\r\n            <div className='user_component_row'>\r\n                  <h1>Welcome to Authors details Page!!</h1>\r\n    \r\n            {loading && <span>Loading...</span>}\r\n            {users.length>0 && users.map(user=>(\r\n                        <CardDetailsComponent key={user.id} users={user}/>\r\n    \r\n        ))}\r\n    \r\n            {users.length===0 && !loading && <h3>No User Available</h3>}\r\n            {error && !loading && <span>{error}</span>}\r\n            </div>\r\n        )\r\n    \r\n}\r\n\r\nexport default Authors\r\n","import './App.css';\nimport UsersComponent from './components/UsersComponent';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport Authors from './components/Authors';\n\nfunction App() {\n  return (\n    // <div className=\"App\">\n    //   <UsersComponent/>\n    // </div>\n    <>\n    <Navbar/>\n    <Switch>\n      <Route exact path='/' component={UsersComponent}/>\n      <Route exact path='/authorList' component={Authors}/>\n      <Redirect to='/'/>\n    </Switch>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { GET_USERS_REQUESTED, GET_USERS_SUCCESS, GET_USERS_FAILURE} from '../types'\r\nconst initialState={\r\n    users:[],\r\n    loading:false,\r\n    error:null\r\n}\r\n\r\nexport default function userReducer(state=initialState,action){\r\n    switch (action.type) {\r\n        case GET_USERS_REQUESTED:\r\n        return{\r\n\r\n            ...state,\r\n            loading:true\r\n        }    \r\n        case GET_USERS_SUCCESS:\r\n        return{\r\n\r\n            ...state,\r\n            loading:false,\r\n            users:action.users\r\n        }    \r\n        case GET_USERS_FAILURE:\r\n        return{\r\n\r\n            ...state,\r\n            loading:true,\r\n            error:action.message\r\n        }    \r\n\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import {combineReducers} from 'redux';\r\nimport userReducer from './users';\r\n\r\nconst rootReducer=combineReducers({\r\nusers:userReducer\r\n});\r\n\r\nexport default rootReducer;","import {call,put,takeEvery} from 'redux-saga/effects';\r\nconst apiURL=`https://jsonplaceholder.typicode.com/users`;\r\n\r\nfunction getApi(){\r\n    return fetch(apiURL,{\r\n        method:'GET',\r\n        headers:{\r\n            'Content-Type':'application/json',\r\n        }\r\n    })\r\n    .then(response=>response.json())\r\n    .catch(error=>console.error(error)\r\n    )\r\n}\r\n\r\nfunction* fetchUsers(action){\r\n    console.log(\"inside fetch user handler\");\r\n\r\n  try{\r\n    const users=yield call(getApi);\r\n    yield put({type:'GET_USERS_SUCCESS',users:users})\r\n  }\r\n  catch(e){\r\n    yield put({type:'GET_USERS_FAILURE',message:e.message})\r\n\r\n  }\r\n}\r\n\r\nfunction* userSagaHandler(){\r\n    console.log(\"inside usersaga handler\");\r\n    \r\n    yield takeEvery('GET_USERS_REQUESTED',fetchUsers);\r\n\r\n\r\n}\r\n\r\nexport default userSagaHandler;","import {createStore,applyMiddleware} from 'redux';\r\nimport rootReducer from './reducers/index.js';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport userSagaHandler from './sagas/userSaga';\r\n\r\nconst sagaMiddleware=createSagaMiddleware();\r\nconst store=createStore(rootReducer,applyMiddleware(sagaMiddleware));\r\nsagaMiddleware.run(userSagaHandler);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <Provider store={store}>\n\n  <React.StrictMode>\n    <BrowserRouter>\n    \n    <App />\n    </BrowserRouter>\n  </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}